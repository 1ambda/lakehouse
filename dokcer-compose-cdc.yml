x-kafka-common:
  &kafka-common
  # profiles: [ "kafka" ]
  image: confluentinc/cp-kafka:7.5.0 # OSS Kafka 3.5.X
  environment:
    &kafka-common-env
    KAFKA_ZOOKEEPER_CONNECT: "zk:2181"
    KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT

  depends_on:
    &kafka-common-depends
    - zk

x-zk-common:
  &zk-common
  image: confluentinc/cp-zookeeper:7.5.0
  # profiles: [ "kafka" ]
  environment:
    &zk-common-env
    ZOOKEEPER_SERVERS: zk:2888:3888

services:
  ####################################################################################################
  # Kafka
  ####################################################################################################
  zk:
    <<: *zk-common
    hostname: zk
    container_name: zk
    ports:
      - "2181:2181"
    environment:
      <<: *zk-common-env
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    volumes:
      - ./docker/volume/zookeeper/data:/var/lib/zookeeper/data
      - ./docker/volume/zookeeper/log:/var/lib/zookeeper/log

  kafka1:
    <<: *kafka-common
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
    depends_on:
      *kafka-common-depends
    volumes:
      - ./docker/volume/kafka/kafka1-data:/var/lib/kafka/data


  kafka-ui:
    # profiles: [ "kafka" ]
    image: provectuslabs/kafka-ui
    hostname: kafka-ui
    container_name: kafka-ui
    ports:
      - "8085:8080"
    # 환경 변수 설정
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zk:2181
    depends_on:
      - zk
      - kafka1

  #  kafka2:
#    <<: *kafka-common
#    hostname: kafka2
#    container_name: kafka2
#    ports:
#      - "9093:9093"
#      - "29093:29093"
#    environment:
#      <<: *kafka-common-env
#      KAFKA_BROKER_ID: 2
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
#    depends_on:
#      <<: *kafka-common-depends
#    volumes:
#      - ./docker/volume/kafka/kafka2-data:/var/lib/kafka/data
#
#  kafka3:
#    <<: *kafka-common
#    hostname: kafka3
#    container_name: kafka3
#    ports:
#      - "9094:9094"
#      - "29094:29094"
#    environment:
#      <<: *kafka-common-env
#      KAFKA_BROKER_ID: 3
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
#    depends_on:
#      <<: *kafka-common-depends
#    volumes:
#      - ./docker/volume/kafka/kafka3-data:/var/lib/kafka/data


  ####################################################################################################
  # MySQL
  ####################################################################################################
  mysql:
    # profiles: [ "kafka" ]
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql
    hostname: mysql
    ports:
      - "3306:3306"
    environment:
      TZ: UTC
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      # MYSQL_USER: "mysqluser"
      # MYSQL_PASSWORD: "mysqlpw"

    restart: always
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/entrypoint.sql:/docker-entrypoint-initdb.d/entrypoint.sql
      - ./docker/volume/mysql/data:/var/lib/mysql
      - ./docker/volume/mysql/logs/:/var/log/mysql


  ####################################################################################################
  # Kafka Producer: Debezium MySQL Connector
  ####################################################################################################
  kafka-producer:
    # profiles: [ "kafka" ]
    image: debezium/connect:2.3.3.Final
    container_name: kafka-producer
    hostname: kafka-producer
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka1:29092
      - GROUP_ID=cdc.inventory
      - CONFIG_STORAGE_TOPIC=cdc.inventory.connect.configs
      - OFFSET_STORAGE_TOPIC=cdc.inventory.connect.offsets
      - STATUS_STORAGE_TOPIC=cdc.inventory.connect.statuses
    depends_on:
      - kafka1
      - mysql

# Configure Network
networks:
  default:
    name: lakehouse
